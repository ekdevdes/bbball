{"tagline":"A simple and powerful PHP dribbble client","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"bbball \r\n======\r\nA simple and powerful PHP Client that covers every endpoint of the dribbble api\r\n\r\nInstallation\r\n------------\r\n\r\nOpen terminal and paste the following:\r\n\r\n`cd the-directory-to-put-bbball-in`\r\n\r\n`git clone https://github.com/ekdevdes/bbball.git`\r\n\r\nSetup\r\n-----\r\n\r\n```php\r\n<?php\r\n  \r\n include_once 'bbball.php';\r\n \r\n $dribbble = new BBBall;\r\n \r\n```\r\n \r\nUsage\r\n-----\r\n \r\n ```php\r\n <?php\r\n // fetch page 2\r\n $dribbble->page = 2;\r\n \r\n // â€¦and lets get 20 shots per page\r\n $dribbble->per_page = 20;\r\n\r\n // get shots \r\n $shots = $dribbble->get_shots();\r\n \r\n // get a shot\r\n $shot = $dribbble->get_shot(43424);\r\n \r\n // get a player's info\r\n $player_info = $dribbble->get_player_info('ethankr');\r\n \r\n // get only a shot's rebounds\r\n $rebounds = $dribbble->get_shot_rebounds(43424);\r\n \r\n // get only a shot's comments\r\n $comments = $dribbble->get_shot_comments(43424);\r\n \r\n```\r\n\r\nDocumentation\r\n-------------\r\n\r\nAfter you've included the `bbball.php` file and create a new instance of it here are the methods you can use:\r\n\r\n+  `get_shot($id,$show_rebounds=false,$show_comments=false)`\r\n\t+ **Gets a single shot from dribbbble**\r\n\t+ `$id` `int` The shots id. [Required] [Default: none]\r\n\t+ `$show_rebounds` `bool` If true will include the given shot's (the shot is specified by the $id param) rebounds [Optional][Default: false]\r\n\t+ `$show_comments` `bool` If true will include the given shot's (the shot is specified by the $id param) comments [Optional][Default: false] \r\n\t+ **Returns: an array of the parsed form of the resulting JSON**\r\n\t\r\n+  `get_shots($list=\"everyone\",$player_id=NULL)`\r\n\t+ **Gets shots from dribbble with optionally, a few filters**\r\n\t+ `$list` `string` The list to fetch the shots from. Either \"debuts\",\"everyone\",\"popular\",\"following\" or \"likes\" [Optional][Default: \"everyone\"]. For \"following\" or \"likes\" the `$player_id` must be not NULL \r\n\t+ `$player_id` `int` A given player's id. If not present then will it will be ignored. If present $list will be ignored. [Optional][Default: none]\r\n\t<br>\r\n\t  NOTE: In order to specify the \"following\" or \"likes\" options the `$player_id` must not be NULL\r\n\t  <br>\r\n\t NOTE: `$player_id` can either the players actual id or their userame without the '@' in the begining\t \r\n\t + **Returns: an array of the parsed form of the resulting JSON**\r\n+ `get_player_info($id)`\r\n\t+ **Get's a players info given a player id.**\r\n\t+ `$id` `int` or `string` The player's id [Required][Default: none]. $id can either be the users actual id or their username\r\n\t+ **Returns: an array of the parsed form of the resulting JSON**\r\n+ `get_shot_rebounds($id)`\r\n\t+ **Gets only a given shot's rebounds**\r\n\t+ `$id` `int` the given shot's id\r\n\t+ **Returns:  an array of the given shot's (specified by the `$id`) rebounds**\r\n+ `get_shot_comments($id)`\r\n\t+ **Gets only a given shot's comments**\r\n\t+ `$id` `int` the given shot's id\r\n\t+ **Returns: an array of the given shot's (specified by the `$id`) comments**\r\n+ `get_player_shots($id)`\r\n\t+ **Gets only a given players shots**\r\n \t+ `$id` `int` or `string` the given players id or username without the '@' sign\r\n  \t+ **Returns: an array from the parsed JSON** \r\n\t\r\nBug Reporter & Feature Requests\r\n------------\r\n\r\nPlease report any bugs here on Github. \r\n\r\n[http://github.com/ekdevdes/bbball/issues](http://github.com/ekdevdes/bbball/issues)\r\n\r\nThank you.\r\n\r\nContributing\r\n------------\r\n\r\nIf you would like to contribute to **bbball** please do the following:\r\n\r\n+\tFork this repo\r\n+\tMake your changes\r\n+\tDocument the changes using [PHPDoc](http://phpdoc.org)\r\n+\tSend me a pull request\r\n\r\nThank you :)\r\n\r\nLicense\r\n-------\r\n\r\nbbball IS DOUBLE LICENSED UNDER THE MIT LICENSE AND GPL LICENSE\r\n\r\nMIT LICENSE\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\nGPL LICENSE\r\n\r\nA simple and powerful PHP Dribbble client\r\n\tCopyright (C) 2011  Ethan Kramer\r\n\r\n\tThis program is free software: you can redistribute it and/or modify\r\n\tit under the terms of the GNU General Public License as published by\r\n\tthe Free Software Foundation, either version 3 of the License, or\r\n\t(at your option) any later version.\r\n\r\n\tThis program is distributed in the hope that it will be useful,\r\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n\tGNU General Public License for more details.\r\n\r\n\tYou should have received a copy of the GNU General Public License\r\n\talong with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nbbball","name":"Bbball","google":""}